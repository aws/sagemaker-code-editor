Make storage local to the remote server

This solves two problems:
  1. Extensions running in the browser (like Vim) might use these paths
     directly instead of using the file service and most likely can't write
     to `/User` on disk.
  2. Settings will be stored in the file system instead of in browser
     storage. Using browser storage makes sharing or seeding settings
     between browsers difficult. We may want to revisit this once/if we get
     settings sync.

Unfortunately this does not affect state which uses a separate method with
IndexedDB and does not appear nearly as easy to redirect to disk.

To test install the Vim extension and make sure something that uses file storage
works (history recall for example) and change settings from the UI and on disk
while making sure they appear on the other side.

Index: sagemaker-code-editor/vscode/src/vs/server/node/webClientServer.ts
===================================================================
--- sagemaker-code-editor.orig/vscode/src/vs/server/node/webClientServer.ts
+++ sagemaker-code-editor/vscode/src/vs/server/node/webClientServer.ts
@@ -335,6 +335,7 @@ export class WebClientServer {
 		const workbenchWebConfiguration = {
 			remoteAuthority,
 			serverBasePath: this._basePath,
+			userDataPath: this._environmentService.userDataPath,
 			webviewEndpoint: vscodeBase + this._staticRoute + '/out/vs/workbench/contrib/webview/browser/pre',
 			_wrapWebWorkerExtHostInIframe,
 			developmentOptions: { enableSmokeTestDriver: this._environmentService.args['enable-smoke-test-driver'] ? true : undefined, logLevel: this._logService.getLevel() },
Index: sagemaker-code-editor/vscode/src/vs/workbench/browser/web.api.ts
===================================================================
--- sagemaker-code-editor.orig/vscode/src/vs/workbench/browser/web.api.ts
+++ sagemaker-code-editor/vscode/src/vs/workbench/browser/web.api.ts
@@ -298,6 +298,11 @@ export interface IWorkbenchConstructionO
 	 */
 	readonly configurationDefaults?: Record<string, any>;
 
+	/**
+	 * Path to the user data directory.
+	 */
+	readonly userDataPath?: string
+
 	//#endregion
 
 	//#region Profile options
Index: sagemaker-code-editor/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
===================================================================
--- sagemaker-code-editor.orig/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
+++ sagemaker-code-editor/vscode/src/vs/workbench/services/environment/browser/environmentService.ts
@@ -102,7 +102,14 @@ export class BrowserWorkbenchEnvironment
 	get logFile(): URI { return joinPath(this.windowLogsPath, 'window.log'); }
 
 	@memoize
-	get userRoamingDataHome(): URI { return URI.file('/User').with({ scheme: Schemas.vscodeUserData }); }
+	get userRoamingDataHome(): URI { return joinPath(URI.file(this.userDataPath).with({ scheme: Schemas.vscodeRemote }), 'User'); }
+
+	get userDataPath(): string {
+		if (!this.options.userDataPath) {
+			throw new Error('userDataPath was not provided to the browser');
+		}
+		return this.options.userDataPath;
+	}
 
 	@memoize
 	get argvResource(): URI { return joinPath(this.userRoamingDataHome, 'argv.json'); }
